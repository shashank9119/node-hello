name: Deploy to AWS EBS

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Enter the branch name to deploy'
        required: true
        default: 'main'

jobs:
  validate-branch:
    name: Validate Branch
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate branch exists
        run: |
          git fetch origin
          if ! git ls-remote --exit-code --heads origin ${{ github.event.inputs.branch }}; then
            echo "Branch '${{ github.event.inputs.branch }}' does not exist!"
            exit 1
          fi

  build:
    name: Checkout & Build
    runs-on: ubuntu-latest
    needs: validate-branch

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

  approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
    steps:
      - name: Awaiting Manual Approval
        run: echo "Waiting for manual approval via GitHub UI..."

  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: approval
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Zip Application
        run: zip -r app.zip .

      - name: Upload to S3 and Deploy to EBS
        run: |
          aws s3 cp app.zip s3://your-s3-bucket-name/app-${{ github.run_number }}.zip

          aws elasticbeanstalk create-application-version \
            --application-name your-ebs-app-name \
            --version-label v-${{ github.run_number }} \
            --source-bundle S3Bucket=your-s3-bucket-name,S3Key=app-${{ github.run_number }}.zip

          aws elasticbeanstalk update-environment \
            --environment-name your-ebs-env-name \
            --version-label v-${{ github.run_number }}
